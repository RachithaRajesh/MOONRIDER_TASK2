# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           distribution: 'temurin'
#           java-version: '17'

#       - name: Build with Maven
#         run: mvn clean package -DskipTests

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/product-catalog:${{ github.sha }}

#       ### ‚úÖ Authenticate to Google Cloud
#       - name: Authenticate to GCP
#         uses: google-github-actions/auth@v2
#         with:
#           credentials_json: '${{ secrets.GCP_SA_KEY }}'

#       ### ‚úÖ Get GKE credentials for kubectl
#       - name: Set up GKE credentials
#         uses: google-github-actions/get-gke-credentials@v1
#         with:
#           cluster_name: moonrider-cluster
#           location: us-central1
#           project_id: iaccelerate

#       - name: Confirm cluster context
#         run: |
#           kubectl config current-context
#           kubectl get nodes

#       - name: Deploy to Kubernetes
#         run: |
#           kubectl apply -f kubernetes/v1.0/

#       - name: Wait for deployment rollout
#         run: |
#           kubectl rollout status deployment/product-catalog-v1 -n v1-namespace --timeout=120s

#       ### ‚úÖ Wait for app to become healthy
#       - name: Wait for app to be live
#         run: |
#           echo "üîÅ Waiting for app at http://${{ secrets.INGRESS_IP }}/actuator/health"
#           for i in {1..5}; do
#             echo "Attempt $i..."
#             if curl -sf http://${{ secrets.INGRESS_IP }}/actuator/health | grep UP; then
#               echo "‚úÖ App is UP"
#               exit 0
#             else
#               echo "‚ùå Not ready, retrying..."
#               sleep 10
#             fi
#           done
#           echo "üö® App never came UP"
#           exit 1

#       ### ‚úÖ Final integration test
#       - name: Run integration tests
#         run: |
#           echo "üîÅ Testing /products endpoint"
#           curl -f http://${{ secrets.INGRESS_IP }}/products
